C51 COMPILER V9.00   BSP_STC8GUART                                                         07/21/2020 16:23:56 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE BSP_STC8GUART
OBJECT MODULE PLACED IN .\Objects\Bsp_Stc8gUart.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE ..\BSP\Bsp_Stc8gUart.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\APP;..\BSP;..\
                    -PUB;..\STC8G;..\MOD) DEBUG OBJECTEXTEND PRINT(.\Listings\Bsp_Stc8gUart.lst) OBJECT(.\Objects\Bsp_Stc8gUart.obj)

line level    source

   1          #include "Bsp_Stc8gUart.h"
   2          #include <stdio.h>
   3          #include <stdarg.h>
   4          #include <string.h>
   5          static BOOL b_BusyFlag;
   6          /**
   7           *************************************************************************
   8           * @brief: Bsp_Stc8gUart_Init
   9           * @param: void
  10           * @return: void
  11           * @function:
  12           * @author: 
  13           * @version: V1.0
  14           * @note: 115200 8位 无奇偶校验位
  15           *************************************************************************
  16          **/
  17          void Bsp_Stc8gUart_Init(void)
  18          {
  19   1              //SCON = 0x50;          //8位数据,可变波特率
  20   1              TMOD &= 0x0F;
  21   1              TMOD |= 0x00;//定时器1模式0 为波特率发生器
  22   1              TL1 = BRT;
  23   1              TH1 = BRT >> 8;
  24   1              
  25   1              AUXR |= 0x40;//T1不12分频
  26   1              
  27   1              b_BusyFlag = FALSE;
  28   1              TR1 = 1;
  29   1              ES = 1;
  30   1              EA = 1;
  31   1              
  32   1              PS = 1;//串口优先级最高
  33   1              IPH = 1 << 4;
  34   1      }
  35          /**
  36           *************************************************************************
  37           * @brief: Uart_SendByte
  38           * @param: _uch_Byte -- 发送字节
  39           * @return: void
  40           * @function:
  41           * @author: 
  42           * @version: V1.0
  43           * @note:
  44           *************************************************************************
  45          **/
  46          void Uart_SendByte(INT8U _uch_Byte)
  47          {
  48   1              while(b_BusyFlag);
  49   1              b_BusyFlag = TRUE;
  50   1              SBUF = _uch_Byte;       
  51   1      }
  52          
  53          /**
  54           *************************************************************************
C51 COMPILER V9.00   BSP_STC8GUART                                                         07/21/2020 16:23:56 PAGE 2   

  55           * @brief: Uart_SendString
  56           * @param: _puch_Str -- 要发送的字符串 _uin_Len -- 发送的长度
  57           * @return: void
  58           * @function:
  59           * @author: 
  60           * @version: V1.0
  61           * @note:
  62           *************************************************************************
  63          **/
  64          void Uart_SendString(INT8U *_puch_Str, INT16U _uin_Len) //reentrant //可重载关键字
  65          {
  66   1      //      //串口中断优先级置高 定时器为置低
  67   1      //      PS = 1;
  68   1      //      PT0 = 0;
  69   1      //关闭定时器T0
  70   1              TR0 = 0;//发送数据的时候，不进行遥控接受
  71   1              while(_uin_Len--)
  72   1              {
  73   2                      Uart_SendByte(*_puch_Str++);
  74   2              }
  75   1              TR0 = 1;//发送完成，打开定时器T0
  76   1              //串口中断优先级置低 定时器为置高
  77   1      //      PS = 0;
  78   1      //      PT0 = 1;
  79   1      }
  80          /**
  81           *************************************************************************
  82           * @brief: UartIsr
  83           * @param: void
  84           * @return: void
  85           * @function:
  86           * @author: 
  87           * @version: V1.0
  88           * @note:
  89           *************************************************************************
  90          **/
  91          void UartIsr() interrupt 4
  92          {
  93   1              if (TI)
  94   1              {
  95   2                      TI = 0;
  96   2                      b_BusyFlag = FALSE;
  97   2              }
  98   1              if (RI)
  99   1              {
 100   2                      RI = 0;
 101   2                      //buffer[wptr++] = SBUF;
 102   2              }
 103   1      }
 104          /**
 105           *************************************************************************
 106           * @brief: Uart_Printf
 107           * @param: fmt -- 任意参数
 108           * @return: void
 109           * @function:
 110           * @author: 
 111           * @version: V1.0
 112           * @note:
 113           *************************************************************************
 114          **/
 115          //void Uart_Printf(const char *fmt, ...)
 116          //{
C51 COMPILER V9.00   BSP_STC8GUART                                                         07/21/2020 16:23:56 PAGE 3   

 117          //      va_list ap;
 118          //      char xdata string[128];//访问内部拓展RAM，非访问外部RAM，不能超过内部拓展RAM大小(此处为1024)
 119          //      
 120          //      va_start(ap, fmt);
 121          //      vsprintf(string, fmt, ap);//此处也可以使用sprintf函数，用法差不多，稍加修改即可，此处略去
 122          //      Uart_SendString(string, strlen(string));
 123          //      va_end(ap);
 124          //}
 125          /**
 126           *************************************************************************
 127           * @brief: Buff_Sum
 128           * @param: _puch_Data -- 求和的数据 _uin_Len -- 要求和的长度
 129           * @return: void
 130           * @function:
 131           * @author: 
 132           * @version: V1.0
 133           * @note:
 134           *************************************************************************
 135          **/
 136          INT8U Buff_Sum(INT8U *_puch_Data, INT16U _uin_Len)
 137          {
 138   1              INT8U _uch_Sum = 0;
 139   1              INT8U i;
 140   1              for(i = 0; i < _uin_Len; i++)
 141   1              {
 142   2                      _uch_Sum += *(_puch_Data + i);
 143   2              }
 144   1              return _uch_Sum;
 145   1      }
 146          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    133    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
